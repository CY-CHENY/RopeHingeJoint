
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class SingInConfig : Luban.BeanBase
{
    public SingInConfig(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { var __json0 = _buf["Type"]; if(!__json0.IsArray) { throw new SerializationException(); } Type = new System.Collections.Generic.Dictionary<int, int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int _k0;  { if(!__e0[0].IsNumber) { throw new SerializationException(); }  _k0 = __e0[0]; } int _v0;  { if(!__e0[1].IsNumber) { throw new SerializationException(); }  _v0 = __e0[1]; }  Type.Add(_k0, _v0); }   }
    }

    public static SingInConfig DeserializeSingInConfig(JSONNode _buf)
    {
        return new SingInConfig(_buf);
    }

    /// <summary>
    /// 注释行，读取就会掉过这行
    /// </summary>
    public readonly int Id;
    public readonly System.Collections.Generic.Dictionary<int, int> Type;
   
    public const int __ID__ = 38069398;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "Type:" + Luban.StringUtil.CollectionToString(Type) + ","
        + "}";
    }
}

}

